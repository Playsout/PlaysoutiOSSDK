// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.1.2 effective-5.10 (swiftlang-6.1.2.1.2 clang-1700.0.13.5)
// swift-module-flags: -target arm64-apple-ios12.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -Onone -enable-experimental-feature DebugDescriptionMacro -enable-bare-slash-regex -module-name in_app_purchase_storekit
// swift-module-flags-ignorable: -no-verify-emitted-module-interface -interface-compiler-version 6.1.2
import Flutter
import Foundation
import StoreKit
import Swift
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@_exported import in_app_purchase_storekit
@objc public class InAppPurchasePlugin : ObjectiveC.NSObject, Flutter.FlutterPlugin, in_app_purchase_storekit.FIAInAppPurchaseAPI {
  public var registrar: (any Flutter.FlutterPluginRegistrar)?
  public var paymentQueueHandler: (any in_app_purchase_storekit.FLTPaymentQueueHandlerProtocol)?
  @objc public static func register(with registrar: any Flutter.FlutterPluginRegistrar)
  public init(receiptManager: in_app_purchase_storekit.FIAPReceiptManager, handlerFactory: @escaping (StoreKit.SKRequest) -> any in_app_purchase_storekit.FLTRequestHandlerProtocol = {
      DefaultRequestHandler(requestHandler: FIAPRequestHandler(request: $0))
    }, transactionCallbackChannel: (any in_app_purchase_storekit.FLTMethodChannelProtocol)? = nil)
  convenience public init(registrar: any Flutter.FlutterPluginRegistrar)
  @objc public func canMakePaymentsWithError(_ error: Swift.AutoreleasingUnsafeMutablePointer<Flutter.FlutterError?>) -> Foundation.NSNumber?
  @objc public func transactionsWithError(_ error: Swift.AutoreleasingUnsafeMutablePointer<Flutter.FlutterError?>) -> [in_app_purchase_storekit.FIASKPaymentTransactionMessage]?
  @objc public func storefrontWithError(_ error: Swift.AutoreleasingUnsafeMutablePointer<Flutter.FlutterError?>) -> in_app_purchase_storekit.FIASKStorefrontMessage?
  @objc public func startProductRequestProductIdentifiers(_ productIdentifiers: [Swift.String], completion: @escaping (in_app_purchase_storekit.FIASKProductsResponseMessage?, Flutter.FlutterError?) -> Swift.Void)
  @objc public func addPaymentPaymentMap(_ paymentMap: [Swift.String : Any], error: Swift.AutoreleasingUnsafeMutablePointer<Flutter.FlutterError?>)
  @objc public func finishTransactionFinishMap(_ finishMap: [Swift.String : Any], error: Swift.AutoreleasingUnsafeMutablePointer<Flutter.FlutterError?>)
  @objc public func restoreTransactionsApplicationUserName(_ applicationUserName: Swift.String?, error: Swift.AutoreleasingUnsafeMutablePointer<Flutter.FlutterError?>)
  @objc public func presentCodeRedemptionSheetWithError(_ error: Swift.AutoreleasingUnsafeMutablePointer<Flutter.FlutterError?>)
  @objc public func retrieveReceiptDataWithError(_ error: Swift.AutoreleasingUnsafeMutablePointer<Flutter.FlutterError?>) -> Swift.String?
  @objc public func refreshReceiptReceiptProperties(_ receiptProperties: [Swift.String : Any]?, completion: @escaping (Flutter.FlutterError?) -> Swift.Void)
  @objc public func startObservingPaymentQueueWithError(_ error: Swift.AutoreleasingUnsafeMutablePointer<Flutter.FlutterError?>)
  @objc public func stopObservingPaymentQueueWithError(_ error: Swift.AutoreleasingUnsafeMutablePointer<Flutter.FlutterError?>)
  @objc public func registerPaymentQueueDelegateWithError(_ error: Swift.AutoreleasingUnsafeMutablePointer<Flutter.FlutterError?>)
  @objc public func removePaymentQueueDelegateWithError(_ error: Swift.AutoreleasingUnsafeMutablePointer<Flutter.FlutterError?>)
  @objc public func showPriceConsentIfNeededWithError(_ error: Swift.AutoreleasingUnsafeMutablePointer<Flutter.FlutterError?>)
  public func handleTransactionsUpdated(_ transactions: [StoreKit.SKPaymentTransaction])
  public func handleTransactionsRemoved(_ transactions: [StoreKit.SKPaymentTransaction])
  public func handleTransactionRestoreFailed(_ error: Foundation.NSError)
  public func restoreCompletedTransactionsFinished()
  public func shouldAddStorePayment(payment: StoreKit.SKPayment, product: StoreKit.SKProduct) -> Swift.Bool
  public func updatedDownloads()
  @objc public func supportsStoreKit2WithError(_ error: Swift.AutoreleasingUnsafeMutablePointer<Flutter.FlutterError?>) -> Foundation.NSNumber?
  @objc deinit
}
